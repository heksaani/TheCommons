"""add_new_fields_and_remove_duplicates

Revision ID: 12f2178ee94d
Revises: 755f0a825694
Create Date: 2025-05-24 18:34:01.746122

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "12f2178ee94d"
down_revision: Union[str, None] = "755f0a825694"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None




def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pollstatus = sa.Enum("DRAFT", "ACTIVE", "CLOSED", "ARCHIVED", name="pollstatus")
    pollvisibility = sa.Enum("PUBLIC", "PRIVATE", "UNLISTED", name="pollvisibility")
    pollstatus.create(op.get_bind(), checkfirst=True)
    pollvisibility.create(op.get_bind(), checkfirst=True)
    op.add_column("options", sa.Column("description", sa.String(), nullable=True))
    op.add_column("options", sa.Column("order", sa.Integer(), nullable=True))
    op.add_column("options", sa.Column("is_correct", sa.Boolean(), nullable=True))
    op.add_column("options", sa.Column("vote_count", sa.Integer(), nullable=True))
    op.add_column("polls", sa.Column("status", pollstatus, nullable=False))
    op.add_column("polls", sa.Column("visibility", pollvisibility, nullable=False))
    op.add_column(
        "polls", sa.Column("start_date", sa.DateTime(timezone=True), nullable=True)
    )
    op.add_column(
        "polls", sa.Column("end_date", sa.DateTime(timezone=True), nullable=True)
    )
    op.add_column("polls", sa.Column("allow_delegation", sa.Boolean(), nullable=True))
    op.add_column(
        "polls", sa.Column("require_authentication", sa.Boolean(), nullable=True)
    )
    op.add_column("polls", sa.Column("max_votes_per_user", sa.Integer(), nullable=True))
    op.alter_column(
        "polls", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.add_column(
        "users", sa.Column("last_login", sa.DateTime(timezone=True), nullable=True)
    )
    op.add_column("users", sa.Column("email_verified", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("verification_token", sa.String(), nullable=True))
    op.add_column("users", sa.Column("reset_token", sa.String(), nullable=True))
    op.add_column(
        "users",
        sa.Column("reset_token_expires", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column("votes", sa.Column("weight", sa.Integer(), nullable=True))
    op.add_column("votes", sa.Column("comment", sa.String(), nullable=True))
    op.add_column("votes", sa.Column("ip_address", sa.String(), nullable=True))
    op.add_column("votes", sa.Column("user_agent", sa.String(), nullable=True))
    # ### end Alembic commands ###




def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("votes", "user_agent")
    op.drop_column("votes", "ip_address")
    op.drop_column("votes", "comment")
    op.drop_column("votes", "weight")
    op.drop_column("users", "reset_token_expires")
    op.drop_column("users", "reset_token")
    op.drop_column("users", "verification_token")
    op.drop_column("users", "email_verified")
    op.drop_column("users", "last_login")
    op.alter_column(
        "polls", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.drop_column("polls", "max_votes_per_user")
    op.drop_column("polls", "require_authentication")
    op.drop_column("polls", "allow_delegation")
    op.drop_column("polls", "end_date")
    op.drop_column("polls", "start_date")
    op.drop_column("polls", "visibility")
    op.drop_column("polls", "status")
    op.drop_column("options", "vote_count")
    op.drop_column("options", "is_correct")
    op.drop_column("options", "order")
    op.drop_column("options", "description")
    sa.Enum(name="pollstatus").drop(op.get_bind(), checkfirst=True)
    sa.Enum(name="pollvisibility").drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
